{"version":3,"file":"static/js/758.2d0bde94.chunk.js","mappings":"+MA4EA,UArEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBV,GAASW,KAAKP,EACjC,GAAE,CAACJ,KAECG,EACH,OAAO,KAGT,IAAQS,EAAqDT,EAArDS,YAAaC,EAAwCV,EAAxCU,MAAOC,EAAiCX,EAAjCW,WAAYC,EAAqBZ,EAArBY,SAAUC,EAAWb,EAAXa,OAElD,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAMC,GAAIZ,EAAV,sBACA,wBAAKQ,KACL,wCAAgBK,KAAKC,MAAL,UAAcL,IAA9B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOI,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACnB,OAAKN,GAGE,wBAAcK,GAALC,GAFP,UAGV,OAEH,0BACE,SAAC,KAAD,CACEC,IACGX,EAAD,yCAEsCA,GADlC,sCAGNY,IAAI,QAGR,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/fetchMovie';\nimport { Img, Main } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  // const backTo = backLinkHref.pathname === '/' ? 'Home' : 'Movies';\n  // console.log(backLinkHref);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, popularity, overview, genres } = movie;\n\n  return (\n    <Main>\n      <Link to={backLinkHref}>Go back</Link>\n      <h1>{title}</h1>\n      <p>User Score: {Math.round(`${popularity}`)}%</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <ul>\n        {genres.map(({ name, id }) => {\n          if (!genres) {\n            return 'no genre';\n          }\n          return <li key={id}>{name}</li>;\n        })}\n      </ul>\n      <div>\n        <Img\n          src={\n            !poster_path\n              ? 'https://via.placeholder.com/250x200'\n              : `https://image.tmdb.org/t/p/w500${poster_path}`\n          }\n          alt=\"\"\n        />\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Main>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    popularity: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }),\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","then","poster_path","title","popularity","overview","genres","to","Math","round","map","name","id","src","alt","Suspense","fallback"],"sourceRoot":""}