{"version":3,"file":"static/js/23.4e44b015.chunk.js","mappings":"4LAgCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,KAAKH,EACjC,GAAE,CAACJ,IAECG,GAKH,8BACE,wBACGA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,QANV,IAgBV,C","sources":["components/reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetchMovie';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <section>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n            {/* <Link to={`/movies/${id}`}>{title}</Link> */}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n// export const Cast = () => {\n//   const { movieId } = useParams();\n\n//   const [casts, setCasts] = useState(null);\n//   console.log(casts);\n//   useEffect(() => {\n//     fetchMovieCast(movieId).then(setCasts);\n//   }, [movieId]);\n\n//   if (!casts) {\n//     return null;\n//   }\n\n//   return (\n//     <section>\n//       <ul>\n//         {casts.map(({ id, name, profile_path, character }) => (\n//           <li key={id}>\n//             <img\n//               src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n//               alt=\"\"\n//             />\n//             <p>{name}</p>\n//             <p>Character: {character}</p>\n//             {/* <Link to={`/movies/${id}`}>{title}</Link> */}\n//           </li>\n//         ))}\n//       </ul>\n//     </section>\n//   );\n// };\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","map","id","author","content"],"sourceRoot":""}