{"version":3,"file":"static/js/23.5d39027e.chunk.js","mappings":"6SAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IACrB,4FAHC,cAEGC,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,8CAFpB,cAEGN,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,sDAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKO,MALlB,gCAOHL,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4EAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBZ,EAAAA,EAAAA,IAAA,mGACuEY,EADvE,+CAFpB,cAEGX,EAFH,OAKHG,QAAQS,IAAIZ,EAASC,KAAKC,SALvB,kBAMIF,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,MAAR,MARG,gF,6ECdP,UA5BgB,WACd,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAkBI,GAASM,KAAKF,EACjC,GAAE,CAACJ,IACJV,QAAQS,IAAII,GACPA,GAKH,8BACE,wBACGA,EAAQI,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGhB,EADE,QANV,IAgBV,C","sources":["components/fetchMovie.jsx","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovie() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=35e417e69f137291206951efd172c8b1'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=35e417e69f137291206951efd172c8b1&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearchMovie(movie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=35e417e69f137291206951efd172c8b1&query=${movie}&language=en-US&page=1&include_adult=false`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'components/fetchMovie';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n  console.log(reviews);\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <section>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n            {/* <Link to={`/movies/${id}`}>{title}</Link> */}\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Reviews;\n// export const Cast = () => {\n//   const { movieId } = useParams();\n\n//   const [casts, setCasts] = useState(null);\n//   console.log(casts);\n//   useEffect(() => {\n//     fetchMovieCast(movieId).then(setCasts);\n//   }, [movieId]);\n\n//   if (!casts) {\n//     return null;\n//   }\n\n//   return (\n//     <section>\n//       <ul>\n//         {casts.map(({ id, name, profile_path, character }) => (\n//           <li key={id}>\n//             <img\n//               src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n//               alt=\"\"\n//             />\n//             <p>{name}</p>\n//             <p>Character: {character}</p>\n//             {/* <Link to={`/movies/${id}`}>{title}</Link> */}\n//           </li>\n//         ))}\n//       </ul>\n//     </section>\n//   );\n// };\n"],"names":["fetchMovie","axios","response","data","results","console","error","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","fetchSearchMovie","movie","log","movieId","useParams","useState","reviews","setReviews","useEffect","then","map","author","content"],"sourceRoot":""}