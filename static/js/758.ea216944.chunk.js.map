{"version":3,"file":"static/js/758.ea216944.chunk.js","mappings":"8SAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IACrB,4FAHC,cAEGC,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,8CAFpB,cAEGN,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,sDAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKO,MALlB,gCAOHL,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4EAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBZ,EAAAA,EAAAA,IAAA,mGACuEY,EADvE,+CAFpB,cAEGX,EAFH,OAKHG,QAAQS,IAAIZ,EAASC,KAAKC,SALvB,kBAMIF,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,MAAR,MARG,gF,uFCcP,UAxDqB,WAAO,IAAD,IACjBS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOJ,EAAP,KAAcK,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAM7C,IAJAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAkBQ,GAASS,KAAKN,EACjC,GAAE,CAACH,KAECF,EACH,OAAO,KAGT,IAAQY,EAAqDZ,EAArDY,YAAaC,EAAwCb,EAAxCa,MAAOC,EAAiCd,EAAjCc,WAAYC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAElD,OACE,gCACE,SAAC,KAAD,CAAMC,GAAIX,EAAV,sBACA,wBAAKO,KACL,wCAAgBK,KAAKC,MAAL,UAAcL,IAA9B,QACA,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOI,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAM1B,EAAS,EAATA,GACnB,OAAKqB,GAGE,wBAAcK,GAAL1B,GAFP,UAGV,OAEH,0BACE,gBACE2B,IACGV,EAAD,yCAEsCA,GADlC,sCAGNW,IAAI,QAIR,2BACE,yBACE,SAAC,KAAD,CAAMN,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["components/fetchMovie.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovie() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=35e417e69f137291206951efd172c8b1'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=35e417e69f137291206951efd172c8b1&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearchMovie(movie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=35e417e69f137291206951efd172c8b1&query=${movie}&language=en-US&page=1&include_adult=false`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/fetchMovie';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, popularity, overview, genres } = movie;\n\n  return (\n    <section>\n      <Link to={backLinkHref}>Go back</Link>\n      <h1>{title}</h1>\n      <p>User Score: {Math.round(`${popularity}`)}%</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <ul>\n        {genres.map(({ name, id }) => {\n          if (!genres) {\n            return 'no genre';\n          }\n          return <li key={id}>{name}</li>;\n        })}\n      </ul>\n      <div>\n        <img\n          src={\n            !poster_path\n              ? 'https://via.placeholder.com/250x200'\n              : `https://image.tmdb.org/t/p/w500${poster_path}`\n          }\n          alt=\"\"\n        />\n        {/* {!poster_path&&(<img src=\"https://via.placeholder.com/250x200\" alt=\"\">)  } */}\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovie","axios","response","data","results","console","error","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","fetchSearchMovie","movie","log","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","then","poster_path","title","popularity","overview","genres","to","Math","round","map","name","src","alt"],"sourceRoot":""}