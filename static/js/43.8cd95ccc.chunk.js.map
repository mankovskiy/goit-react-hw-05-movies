{"version":3,"file":"static/js/43.8cd95ccc.chunk.js","mappings":"6SAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IACrB,4FAHC,cAEGC,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,8CAFpB,cAEGN,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,sDAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKO,MALlB,gCAOHL,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,gGAEoBP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4EAFpB,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBZ,EAAAA,EAAAA,IAAA,mGACuEY,EADvE,+CAFpB,cAEGX,EAFH,OAKHG,QAAQS,IAAIZ,EAASC,KAAKC,SALvB,kBAMIF,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,MAAR,MARG,gF,qFC5CMS,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAab,GAAMc,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFIZ,EADC,KASjB,C,mHChBYgB,EAAY,SAAC,GAA6B,EAA3BC,WAA4B,IAAhBC,EAAe,EAAfA,SACtC,OACE,kBAAMA,SAAUA,EAAhB,WACE,kBACEC,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAGd,mBAAQH,KAAK,SAAb,sBAGL,E,SCoBD,EA5Be,WACb,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACH1B,IAILD,EAAAA,EAAAA,IAAiBC,GAAO2B,MAAK,SAAAC,GAAC,OAAIP,EAAeO,EAAnB,GAC/B,GAAE,CAAC5B,IAQJ,OACE,6BACE,oCACA,SAACW,EAAD,CAAWE,SATM,SAAAgB,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OAAOC,SAASjC,MAAMkC,MAC3CV,EAA+B,KAAfO,EAAoB,CAAE/B,MAAO+B,GAAe,GAC7D,IAMIX,EAAYe,OAAS,IAAK,SAACjC,EAAA,EAAD,CAAYC,OAAQiB,MAGpD,C","sources":["components/fetchMovie.jsx","components/moviesList/MoviesList.jsx","components/searchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchMovie() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=35e417e69f137291206951efd172c8b1'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=35e417e69f137291206951efd172c8b1&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearchMovie(movie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=35e417e69f137291206951efd172c8b1&query=${movie}&language=en-US&page=1&include_adult=false`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const SearchBox = ({ searchName, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name=\"movie\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        // value={searchName}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovie } from 'components/fetchMovie';\nimport { SearchBox } from 'components/searchBox/SearchBox';\nimport { MoviesList } from 'components/moviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('movie');\n\n  useEffect(() => {\n    if (!movie) {\n      return;\n    }\n\n    fetchSearchMovie(movie).then(r => setSearchMovie(r));\n  }, [movie]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const queryMovie = e.target.elements.movie.value;\n    setSearchParams(queryMovie !== '' ? { movie: queryMovie } : '');\n  };\n\n  return (\n    <main>\n      <h1>Movies</h1>\n      <SearchBox onSubmit={handleSubmit} />\n      {searchMovie.length > 0 && <MoviesList movies={searchMovie} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovie","axios","response","data","results","console","error","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","fetchSearchMovie","movie","log","MoviesList","movies","location","useLocation","map","title","to","state","from","SearchBox","searchName","onSubmit","name","type","autoComplete","autoFocus","placeholder","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","get","useEffect","then","r","e","preventDefault","queryMovie","target","elements","value","length"],"sourceRoot":""}