{"version":3,"file":"static/js/544.b5b7af47.chunk.js","mappings":"kNAEaA,EAAeC,EAAAA,GAAAA,GAAH,wRCDZC,EAAYD,EAAAA,GAAAA,GAAH,kL,SCITE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACR,EAAD,WACE,UAAC,KAAD,CAAMS,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,UACGI,GACD,gBACEK,MAAM,MACNC,IACGL,EAAD,yCAEsCA,GADlC,sCAGNM,IAAI,yBAVMR,EADN,KAkBjB,C,8ECTD,UAda,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAaC,KAAKH,EACnB,GAAE,KAGD,6BACE,2CACCd,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C,8LChBM,SAAegB,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBE,EAAAA,EAAAA,IACrB,4FAHC,cAEGC,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gGAEoBc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,8CAFpB,cAEGe,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BrB,GAA9B,gGAEoBc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,sDAFpB,cAEGe,EAFH,yBAKIA,EAASC,KAAKM,MALlB,gCAOHJ,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCvB,GAAjC,gGAEoBc,EAAAA,EAAAA,IAAA,6CACiBd,EADjB,4EAFpB,cAEGe,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBX,EAAAA,EAAAA,IAAA,mGACuEW,EADvE,+CAFpB,cAEGV,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gF","sources":["components/moviesList/MoviesList.styled.jsx","pages/movieDetails/MovieDetails.styled.jsx","components/moviesList/MoviesList.jsx","pages/Home/Home.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from 'styled-components';\nexport const MovieItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieGallery } from './MoviesList.styled';\nimport { MovieItem } from 'pages/movieDetails/MovieDetails.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieGallery>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n            <img\n              width=\"100\"\n              src={\n                !poster_path\n                  ? 'https://via.placeholder.com/250x200'\n                  : `https://image.tmdb.org/t/p/w500${poster_path}`\n              }\n              alt=\"Girl in a jacket\"\n            />\n          </Link>\n        </MovieItem>\n      ))}\n    </MovieGallery>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\n\nimport { MoviesList } from 'components/moviesList/MoviesList';\nimport { fetchMovie } from 'services/fetchMovie';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovie().then(setMovies);\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nexport async function fetchMovie() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=35e417e69f137291206951efd172c8b1'\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=35e417e69f137291206951efd172c8b1`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=35e417e69f137291206951efd172c8b1&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchSearchMovie(movie) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=35e417e69f137291206951efd172c8b1&query=${movie}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["MovieGallery","styled","MovieItem","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","width","src","alt","useState","setMovies","useEffect","fetchMovie","then","axios","response","data","results","console","error","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews","fetchSearchMovie","movie"],"sourceRoot":""}